public  class SIGLO_Clientes_JSON_Encrypted {
    
    public String EntityID = '1';
    public String OrigenSystemType = 'SALESFORCE';
    public String PersonTypeID = 'SIN INFORMACION';
    public String RelatedPersonType = 'SIN INFORMACION';
    public String PersonName = 'SIN INFORMACION';
    public String PaternalSurname = 'SIN INFORMACION';
    public String MaternalSurname = 'SIN INFORMACION';
    public String FiscalPersonType = 'SIN INFORMACION';
    public String TaxID = 'SIN INFORMACION';
    public String Birthdate = String.valueOf(Date.newInstance(1900, 01, 01));
    public String IsForeignCitizen = 'SIN INFORMACION';
    public String NationalityCountry = 'SIN INFORMACION';
    public String EconomicActivityCode = '9999999';
    public String ProfessionName = 'SIN INFORMACION';
    public String ClientCode = 'SIN INFORMACION';
    public String PEP = 'N';
    public String Street = 'SIN INFORMACION';
    public String OutsiderNumber = 'SIN INFORMACION';
    public String InternalNumber = 'SIN INFORMACION';
    public String Suburb = 'SIN INFORMACION';
    public String City = '';
    public String State = 'SIN INFORMACION';
    public String Country = 'SIN INFORMACION';
    public String ZipCode = 'SIN INFORMACION';
    public String Locality = '99999999';
    public String Telephone1 = 'SIN INFORMACION';
    public String ReferenceID = '0';
    public String BirthCountry = 'SIN INFORMACION';
    public String ContractCode = 'SIN INFORMACION';
    public String CURP = 'SIN INFORMACION';
    public String Email = 'SIN INFORMACION';
    public String WebPage = 'SIN INFORMACION';
    public String FEA = '';
    public String MaritalStatusID = '1';
    public String Ocupation = 'SIN INFORMACION';
    public String EmployeeCode = 'SIN INFORMACION';
    public String WritingNumber = 'SIN INFORMACION';
    public String WritingDate = String.valueOf(Date.newInstance(1900, 01, 01));
    public String PositionPEP = '';
    public String IsActingBehalfThirdPerson = '';
    public String RealOwnerName = '';
    public String LocalForexOperationsReason = '';
    public String County = 'SIN INFORMACION';
    public String Telephone2 = '';
    public String Fax = '';
    public String OriginResource = 'SIN INFORMACION';
    public String HasAttorney = '';
    public String ImportDate = '';
    public String Reference1 = 'SIN INFORMACION';
    public String CheckSum = String.valueOf(Date.today());
    public String Generic1RiskValueDescriptionString = 'SIN INFORMACION';
    public String Generic2RiskValueDescriptionString = 'SIN INFORMACION';
    public String Generic3RiskValueDescriptionString = '001';
    public String Generic4RiskValueDescriptionString = 'SIN INFORMACION';
    public String Generic5RiskValueDescriptionString = 'SIN INFORMACION';
    public String Generic6RiskValueDescriptionString = 'SIN INFORMACION';
    public String Generic7RiskValueDescriptionString = 'SIN INFORMACION';
    public String Generic8RiskValueDescriptionString = 'SIN INFORMACION';
    public String Generic9RiskValueDescriptionString = '';
    public String Generic10RiskValueDescriptionString = '';
    public String BirthState = 'SIN INFORMACION';
    public String IsMale = '0';
    public String IsOnDemand = '0';
    public String Generic11RiskValueDescriptionString = '';
    public String Generic12RiskValueDescriptionString = '';
    public String Generic13RiskValueDescriptionString = '';
    public String Generic14RiskValueDescriptionString = '';
    public String Generic15RiskValueDescriptionString = '';
    public String Generic16RiskValueDescriptionString = '';
    public String Generic17RiskValueDescriptionString = '';
    public String Generic18RiskValueDescriptionString = '';
    public String Generic19RiskValueDescriptionString = '';
    public String Generic20RiskValueDescriptionString = '';
    public String Generic21RiskValueDescriptionString = '';
    public String Generic22RiskValueDescriptionString = '';
    public String Generic23RiskValueDescriptionString = '';
    public String Generic24RiskValueDescriptionString = '';
    public String Generic25RiskValueDescriptionString = '';
    public String SofomCode = '';
    public String TaxiIDCounty = 'SIN INFORMACION';
    public String BeneficiaryPct = '0';
    public String RelatedPersonAccount = '';
    Blob cryptoKey = Blob.valueOf([SELECT key__c FROM SIGLO_Crypto_Key__mdt].key__c);
    
    public String generateJSONContent(SIGLO_Clientes_JSON_Encrypted clienteJSON){
        
        system.JSONGenerator gen = system.JSON.createGenerator(true);
        gen.writeStartObject();
        gen.writeStringField('EntityID', encryptData(clienteJSON.EntityID));
        gen.writeStringField('OrigenSystemType', encryptData(clienteJSON.OrigenSystemType));
        gen.writeStringField('PersonTypeID',encryptData(clienteJSON.PersonTypeID));
        gen.writeStringField('RelatedPersonType',encryptData(clienteJSON.RelatedPersonType));
        gen.writeStringField('PersonName', encryptData(clienteJSON.PersonName));
        gen.writeStringField('PaternalSurname', encryptData(clienteJSON.PaternalSurname));
        gen.writeStringField('MaternalSurname', encryptData(clienteJSON.MaternalSurname));
        gen.writeStringField('FiscalPersonType', encryptData(clienteJSON.FiscalPersonType));
        gen.writeStringField('TaxID',encryptData(clienteJSON.TaxID));
        gen.writeStringField('Birthdate', encryptData(clienteJSON.Birthdate));
        gen.writeStringField('IsForeignCitizen',encryptData(clienteJSON.IsForeignCitizen ));
        gen.writeStringField('NationalityCountry', encryptData(clienteJSON.NationalityCountry));
        gen.writeStringField('EconomicActivityCode', encryptData(clienteJSON.EconomicActivityCode));
        gen.writeStringField('ProfessionName', encryptData(clienteJSON.ProfessionName));
        gen.writeStringField('ClientCode', encryptData(clienteJSON.ClientCode));
        gen.writeStringField('PEP',encryptData(clienteJSON.PEP ));
        gen.writeStringField('Street', encryptData(clienteJSON.Street));
        gen.writeStringField('OutsiderNumber', encryptData(clienteJSON.OutsiderNumber));
        gen.writeStringField('InternalNumber',encryptData(clienteJSON.InternalNumber));
        gen.writeStringField('Suburb',encryptData(clienteJSON.Suburb));
        gen.writeStringField('City',encryptData(clienteJSON.City));
        gen.writeStringField('State',encryptData(clienteJSON.State));
        gen.writeStringField('Country',encryptData(clienteJSON.Country));
        gen.writeStringField('ZipCode',encryptData(clienteJSON.ZipCode));
        gen.writeStringField('Locality',encryptData(clienteJSON.Locality));
        gen.writeStringField('Telephone1',encryptData(clienteJSON.Telephone1));
        gen.writeStringField('ReferenceID',encryptData(clienteJSON.ReferenceID));
        gen.writeStringField('BirthCountry',encryptData(clienteJSON.BirthCountry));
        gen.writeStringField('ContractCode',encryptData(clienteJSON.ContractCode));
        gen.writeStringField('CURP',encryptData(clienteJSON.CURP));
        gen.writeStringField('Email',encryptData(clienteJSON.Email));
        gen.writeStringField('WebPage',encryptData(clienteJSON.WebPage));
        gen.writeStringField('FEA',encryptData(clienteJSON.FEA));
        gen.writeStringField('MaritalStatusID',encryptData(clienteJSON.MaritalStatusID));
        gen.writeStringField('Ocupation',encryptData(clienteJSON.Ocupation));
        gen.writeStringField('EmployeeCode',encryptData(clienteJSON.EmployeeCode));
        gen.writeStringField('WritingNumber',encryptData(clienteJSON.WritingNumber));
        gen.writeStringField('WritingDate', encryptData(clienteJSON.WritingDate));
        gen.writeStringField('PositionPEP',encryptData(clienteJSON.PositionPEP));
        gen.writeStringField('IsActingBehalfThirdPerson',encryptData(clienteJSON.IsActingBehalfThirdPerson));
        gen.writeStringField('RealOwnerName',encryptData(clienteJSON.RealOwnerName));
        gen.writeStringField('LocalForexOperationsReason',encryptData(clienteJSON.LocalForexOperationsReason));
        gen.writeStringField('Telephone2',encryptData(clienteJSON.Telephone2));
        gen.writeStringField('Fax',encryptData(clienteJSON.Fax));
        gen.writeStringField('OriginResource',encryptData(clienteJSON.OriginResource));
        gen.writeStringField('HasAttorney',encryptData(clienteJSON.HasAttorney));
        gen.writeStringField('ImportDate',encryptData(clienteJSON.ImportDate));
        gen.writeStringField('Reference1',encryptData(clienteJSON.Reference1));
        gen.writeStringField('CheckSum', encryptData(clienteJSON.CheckSum));
        gen.writeStringField('Generic1RiskValueDescriptionString',encryptData(clienteJSON.Generic1RiskValueDescriptionString));
        gen.writeStringField('Generic2RiskValueDescriptionString',encryptData(clienteJSON.Generic2RiskValueDescriptionString));
        gen.writeStringField('Generic3RiskValueDescriptionString',encryptData(clienteJSON.Generic3RiskValueDescriptionString));
        gen.writeStringField('Generic4RiskValueDescriptionString',encryptData(clienteJSON.Generic4RiskValueDescriptionString));
        gen.writeStringField('Generic5RiskValueDescriptionString',encryptData(clienteJSON.Generic5RiskValueDescriptionString));
        gen.writeStringField('Generic6RiskValueDescriptionString',encryptData(clienteJSON.Generic6RiskValueDescriptionString));
        gen.writeStringField('Generic7RiskValueDescriptionString',encryptData(clienteJSON.Generic7RiskValueDescriptionString));
        gen.writeStringField('Generic8RiskValueDescriptionString',encryptData(clienteJSON.Generic8RiskValueDescriptionString));
        gen.writeStringField('Generic9RiskValueDescriptionString',encryptData(clienteJSON.Generic9RiskValueDescriptionString));
        gen.writeStringField('Generic10RiskValueDescriptionString',encryptData(clienteJSON.Generic10RiskValueDescriptionString));
        gen.writeStringField('BirthState', encryptData(clienteJSON.BirthState));
        gen.writeStringField('IsMale', encryptData(clienteJSON.IsMale));
        gen.writeStringField('IsOnDemand', encryptData(clienteJSON.IsOnDemand));
        gen.writeStringField('Generic11RiskValueDescriptionString',encryptData(clienteJSON.Generic11RiskValueDescriptionString));
        gen.writeStringField('Generic12RiskValueDescriptionString',encryptData(clienteJSON.Generic12RiskValueDescriptionString));
        gen.writeStringField('Generic13RiskValueDescriptionString',encryptData(clienteJSON.Generic13RiskValueDescriptionString));
        gen.writeStringField('Generic14RiskValueDescriptionString',encryptData(clienteJSON.Generic14RiskValueDescriptionString));
        gen.writeStringField('Generic15RiskValueDescriptionString',encryptData(clienteJSON.Generic15RiskValueDescriptionString));
        gen.writeStringField('Generic16RiskValueDescriptionString',encryptData(clienteJSON.Generic16RiskValueDescriptionString));
        gen.writeStringField('Generic17RiskValueDescriptionString',encryptData(clienteJSON.Generic17RiskValueDescriptionString));
        gen.writeStringField('Generic18RiskValueDescriptionString',encryptData(clienteJSON.Generic18RiskValueDescriptionString));
        gen.writeStringField('Generic19RiskValueDescriptionString',encryptData(clienteJSON.Generic19RiskValueDescriptionString));
        gen.writeStringField('Generic20RiskValueDescriptionString',encryptData(clienteJSON.Generic20RiskValueDescriptionString));
        gen.writeStringField('Generic21RiskValueDescriptionString',encryptData(clienteJSON.Generic21RiskValueDescriptionString));
        gen.writeStringField('Generic22RiskValueDescriptionString',encryptData(clienteJSON.Generic22RiskValueDescriptionString));
        gen.writeStringField('Generic23RiskValueDescriptionString',encryptData(clienteJSON.Generic23RiskValueDescriptionString));
        gen.writeStringField('Generic24RiskValueDescriptionString',encryptData(clienteJSON.Generic24RiskValueDescriptionString));
        gen.writeStringField('Generic25RiskValueDescriptionString',encryptData(clienteJSON.Generic25RiskValueDescriptionString));
        gen.writeStringField('SofomCode',encryptData(clienteJSON.SofomCode));
        gen.writeStringField('TaxiIDCounty',encryptData(clienteJSON.TaxiIDCounty));
        gen.writeStringField('BeneficiaryPct',encryptData(clienteJSON.BeneficiaryPct));
        gen.writeStringField('RelatedPersonAccount',encryptData(clienteJSON.RelatedPersonAccount));

        gen.writeEndObject(); 
        
        return gen.getAsString();
    }

    public String encryptData(String uncryptedData){
        Blob data = Blob.valueOf(uncryptedData); 
        Blob encryptedData = Crypto.encryptWithManagedIV('AES128', cryptoKey, data ); 
        return EncodingUtil.base64Encode(encryptedData); 
    }
    
}